names(qb.playertotal)=c('QB','Person','Int')
PlayerQBPlot = dcast(qb.playertotal,QB~Person)
barchart = gvisColumnChart(PlayerQBPlot,options=list(vAxis.slantedText=F,isStacked=T))
cumulatives = c()
peeps = unique(derby$Person)
for (i in 1:4) {
weekly.person = derby[derby$Person==peeps[i],]
weekly.person$cumulative = cumsum(weekly.person$weeklytotal)
cumulatives = rbind(cumulatives,weekly.person)
}
weekly = dcast(cumulatives[,c('Week','Person','cumulative')],Week~Person)
weeklytotals = gvisLineChart(weekly)
interactive = gvisMerge(barchart,weeklytotals)
graph = startGraph(url = 'http://derby.sb02.stations.graphenedb.com:24789/db/data/',
username = 'derby',
password = 'xSj1GzPmqFWns6SYZo8V')
### Establish pick order (Dropbox or Googledocs)
### Eliminate last week's picks
firstpicks = substring(cypher(graph,paste('match (n:Picks {week:',currentWeek,
',pickOrder:1}) return n.pick1,n.pick2'))[1,1:2],4)
secondpicks = substring(cypher(graph,paste('match (n:Picks {week:',currentWeek,
',pickOrder:2}) return n.pick1,n.pick2,n.pick3,n.pick4'))[1,1:4],4)
thirdpicks = substring(cypher(graph,paste('match (n:Picks {week:',currentWeek,
',pickOrder:3}) return n.pick1,n.pick2,n.pick3,n.pick4,n.pick5,n.pick6'))[1,1:6],4)
fourthpicks = substring(cypher(graph,paste('match (n:Picks {week:',currentWeek,
',pickOrder:4}) return n.pick1,n.pick2,n.pick3,n.pick4,n.pick5,n.pick6,n.pick7,n.pick8'))[1,1:8],4)
picks1 = firstpicks
picks2 = secondpicks[!(secondpicks %in% firstpicks)][1:2]
picks3v1 = thirdpicks[!(thirdpicks %in% picks1)]
picks3 = picks3v1[!(picks3v1 %in% picks2)][1:2]
picks4v1 = fourthpicks[!(fourthpicks %in% picks1)]
picks4v2 = picks4v1[!(picks4v1 %in% picks2)]
picks4 = picks4v2[!(picks4v2 %in% picks3)][1:2]
### Email picks
emailBody = paste0('<html>Here are the selections for week ',currentWeek,':','<br><br><b>',
info[info$week==currentWeek&info$pickOrder==1,'name'],'</b>: ',picks1[1],' and ',picks1[2],'<br><b>',
info[info$week==currentWeek&info$pickOrder==2,'name'],'</b> : ',picks2[1],' and ',picks2[2],'<br><b>',
info[info$week==currentWeek&info$pickOrder==3,'name'],'</b> : ',picks3[1],' and ',picks3[2],'<br><b>',
info[info$week==currentWeek&info$pickOrder==4,'name'],'</b> : ',picks4[1],' and ',picks4[2],'<br>'
)
derbylist = c('cdthoms@gmail.com')
send.mail(from = 'intderby@gmail.com',
to = derbylist,
subject = paste0('Week ',currentWeek,' INT Derby Selections'),
body = emailBody,
html = T,
smtp = list(host.name = 'smtp.gmail.com',port=465,user.name='intderby',passwd='interceptions',ssl=T),
authenticate = T,
send = T
)
library(sendmailR)
sendmail('intderby@gmail.com','cdthoms@gmail.com','Week 5 Picks',emailBody)
mailControl=list(smtpServer="serverinfo")
sendmail('intderby@gmail.com','cdthoms@gmail.com','Week 5 Picks',emailBody,control=mailControl)
sendmail('intderby@gmail.com','cdthoms@gmail.com','Week 5 Picks',emailBody,control=mailControl,blocking=F)
send.email <- function(to, from, subject,
message, attachment=NULL,
username, password,
server="smtp.gmail.com:587",
confirmBeforeSend=TRUE){
# to: a list object of length 1.  Using list("Recipient" = "recip@somewhere.net") will send the message to the address but
#     the name will appear instead of the address.
# from: a list object of length 1.  Same behavior as 'to'
# subject: Character(1) giving the subject line.
# message: Character(1) giving the body of the message
# attachment: Character(1) giving the location of the attachment
# username: character(1) giving the username.  If missing and you are using Windows, R will prompt you for the username.
# password: character(1) giving the password.  If missing and you are using Windows, R will prompt you for the password.
# server: character(1) giving the smtp server.
# confirmBeforeSend: Logical.  If True, a dialog box appears seeking confirmation before sending the e-mail.  This is to
#                    prevent me to send multiple updates to a collaborator while I am working interactively.
if (!is.list(to) | !is.list(from)) stop("'to' and 'from' must be lists")
if (length(from) > 1) stop("'from' must have length 1")
if (length(to) > 1) stop("'send.email' currently only supports one recipient e-mail address")
if (length(attachment) > 1) stop("'send.email' can currently send only one attachment")
if (length(message) > 1){
stop("'message' must be of length 1")
message <- paste(message, collapse="\\n\\n")
}
if (is.null(names(to))) names(to) <- to
if (is.null(names(from))) names(from) <- from
if (!is.null(attachment)) if (!file.exists(attachment)) stop(paste("'", attachment, "' does not exist!", sep=""))
if (missing(username)) username <- winDialogString("Please enter your e-mail username", "")
if (missing(password)) password <- winDialogString("Please enter your e-mail password", "")
require(rJython)
rJython <- rJython()
rJython$exec("import smtplib")
rJython$exec("import os")
rJython$exec("from email.MIMEMultipart import MIMEMultipart")
rJython$exec("from email.MIMEBase import MIMEBase")
rJython$exec("from email.MIMEText import MIMEText")
rJython$exec("from email.Utils import COMMASPACE, formatdate")
rJython$exec("from email import Encoders")
rJython$exec("import email.utils")
mail<-c(
#Email settings
paste("fromaddr = '", from, "'", sep=""),
paste("toaddrs  = '", to, "'", sep=""),
"msg = MIMEMultipart()",
paste("msg.attach(MIMEText('", message, "'))", sep=""),
paste("msg['From'] = email.utils.formataddr(('", names(from), "', fromaddr))", sep=""),
paste("msg['To'] = email.utils.formataddr(('", names(to), "', toaddrs))", sep=""),
paste("msg['Subject'] = '", subject, "'", sep=""))
if (!is.null(attachment)){
mail <- c(mail,
paste("f = '", attachment, "'", sep=""),
"part=MIMEBase('application', 'octet-stream')",
"part.set_payload(open(f, 'rb').read())",
"Encoders.encode_base64(part)",
"part.add_header('Content-Disposition', 'attachment; filename=\"%s\"' % os.path.basename(f))",
"msg.attach(part)")
}
#SMTP server credentials
mail <- c(mail,
paste("username = '", username, "'", sep=""),
paste("password = '", password, "'", sep=""),
#Set SMTP server and send email, e.g., google mail SMTP server
paste("server = smtplib.SMTP('", server, "')", sep=""),
"server.ehlo()",
"server.starttls()",
"server.ehlo()",
"server.login(username,password)",
"server.sendmail(fromaddr, toaddrs, msg.as_string())",
"server.quit()")
message.details <-
paste("To:               ", names(to), " (", unlist(to), ")", "\n",
"From:             ", names(from), " (", unlist(from), ")", "\n",
"Using server:     ", server, "\n",
"Subject:          ", subject, "\n",
"With Attachments: ", attachment, "\n",
"And the message:\n", message, "\n", sep="")
if (confirmBeforeSend)
SEND <- winDialog("yesnocancel", paste("Are you sure you want to send this e-mail to ", unlist(to), "?", sep=""))
else SEND <- "YES"
if (SEND %in% "YES"){
jython.exec(rJython,mail)
cat(message.details)
}
else cat("E-mail Delivery was Canceled by the User")
}
send.email('cdthoms@gmail.com','intderby@gmail.com','Week 5 Picks',emailBody,username='intderby',
password='interceptions')
send.email(list('cdthoms@gmail.com'),list('intderby@gmail.com'),'Week 5 Picks',emailBody,username='intderby',
password='interceptions')
intstall.packages('rJython')
install.packages('rJython')
send.email(list('cdthoms@gmail.com'),list('intderby@gmail.com'),'Week 5 Picks',emailBody,username='intderby',
password='interceptions')
??winDialog
send.email(list('cdthoms@gmail.com'),list('intderby@gmail.com'),'Week 5 Picks',emailBody,username='intderby',
password='interceptions',confirmBeforeSend=F)
shiny::runApp()
shiny::runApp()
binom(4,3)
?qbinom
rbinom(4,3,.5)
rbinom(4,3,.5)
rbinom(4,3,.5)
dbinom(3,4,.5)
dbinom(0,4,.5)
dbinom(1,4,.5)
dbinom(2,4,.5)
4!
4*3*2
24/4
6/16
1275384.48-1275170.38
214.1/1275384.48
.1*.95
.095/(.1*.95+.05*.9)
.099/(.099+.045)
.045/.9
m <- cbind(c(99,1,100),c(45,855,900),c(144,856,1000))
row.names(m) = c('Test Result: Disease','Test Result: No Disease','Total')
colnames(m) = c('Truth: Disease','Truth: No Disease','Total')
99/144
m
15076.2+16830.3387
12914.11+16830.3387
19452.3212+15076.2
path = '/Users/Chris/Documents/Personal/Old Computer/Chris Documents/Derby/Derby'
setwd(path)
geno = readJPEG('genosmith.jpg')
library(RCurl)
library(ggplot2)
library(reshape2)
library(gridExtra)
suppressPackageStartupMessages(library(googleVis))
shiny::runApp('~/Documents/InterceptionDerby')
df <- data.frame(country=c("US", "GB", "BR"),
val1=c(1,3,4),
val2=c(23,12,32))
## Bar chart
Bar1 <- gvisBarChart(df, xvar="country", yvar=c("val1", "val2"))
plot(Bar1)
## Stacked bar chart
Bar2 <- gvisBarChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(isStacked=TRUE))
plot(Bar2)
## Add a customised title and change width of bars
Bar3 <- gvisBarChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(title="Hello World",
titleTextStyle="{color:'red',fontName:'Courier',fontSize:16}",
bar="{groupWidth:'100%'}"))
plot(Bar3)
## Bar chart
Bar1 <- gvisBarChart(df, xvar="country", yvar=c("val1", "val2"))
plot(Bar1)
## Stacked bar chart
Bar2 <- gvisBarChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(isStacked=TRUE))
plot(Bar2)
df=data.frame(country=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
## Column chart
Col1 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"))
plot(Col1)
## Stacked column chart
Col2 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(isStacked=TRUE))
plot(Col2)
## Add a customised title and and change width of columns
Col3 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(title="Hello World",
titleTextStyle="{color:'red',fontName:'Courier',fontSize:16}",
bar="{groupWidth:'100%'}"))
plot(Col3)
## Not run:
## Change y-axis to percentages
Col4 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(vAxis="{format:'#,###%'}"))
df=data.frame(country=c("US", "GB", "BR",
'AB','AC','AD','AF','AG'), val1=c(1,3,4,3,3,3,3,3), val2=c(23,12,32,2,2,2,2,2))
## Column chart
Col1 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"))
plot(Col1)
## Stacked column chart
Col2 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(isStacked=TRUE))
plot(Col2)
## Add a customised title and and change width of columns
Col3 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(title="Hello World",
titleTextStyle="{color:'red',fontName:'Courier',fontSize:16}",
bar="{groupWidth:'100%'}"))
plot(Col3)
## Not run:
## Change y-axis to percentages
Col4 <- gvisColumnChart(df, xvar="country", yvar=c("val1", "val2"),
options=list(vAxis="{format:'#,###%'}"))
barchart
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(hAxis.slantedText=F,isStacked=T))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(hAxis.slantedText=F,isStacked=T,hAxes='[{title:"QB",textPosition:"out"}]'))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,gvis.editor="Editor"))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,width=500,height=300))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,width=750,height=500))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,width=1500,height=750))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,vAxis="{slantedText:true,slantedTextAngle:90}",width=1500,height=750))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,vAxis="[{slantedText:true,slantedTextAngle:90}]",width=1500,height=750))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,vAxis.slantedText=T,vAxis.slantedTextAngle=90,width=1500,height=750))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,vAxis='{slantedText:true,slantedTextAngle:90}',width=1500,height=750))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,vAxis='{slantedText:true,slantedTextAngle:90}',width=1500,height=750,gvis.editor="Editor"))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,hAxis='{slantedText:true,slantedTextAngle:90}',width=1500,height=750,gvis.editor="Editor"))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,hAxis='{slantedText:true,slantedTextAngle:180}',width=1500,height=750,gvis.editor="Editor"))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,hAxis='{slantedText:true,slantedTextAngle:270}',width=1500,height=750,gvis.editor="Editor"))
plot(barchart)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,hAxis='{slantedText:true,slantedTextAngle:90}',width=1500,height=750))
plot(barchart)
cumulatives = c()
peeps = unique(derby$Person)
for (i in 1:4) {
weekly.person = derby[derby$Person==peeps[i],]
weekly.person$cumulative = cumsum(weekly.person$weeklytotal)
cumulatives = rbind(cumulatives,weekly.person)
}
weekly = dcast(cumulatives[,c('Week','Person','cumulative')],Week~Person)
weeklytotals = gvisLineChart(weekly)
plot(weeklytotals)
weeklytotals = gvisLineChart(weekly,options=list(width=1500,height=750))
plot(weeklytotals)
shiny::runApp('~/Documents/InterceptionDerby')
19500*.8
fact = function(n) {
if (n=0|n=1) {
return(1)
} else {
return fact(n-1) * n
}
}
fact = function(n) {
if (n=0|n=1) {
return 1
} else {
return fact(n-1) * n
}
}
fact = function(n) {
if (n==0|n==1) {
return 1
} else {
return fact(n-1) * n
}
}
library(RCurl)
library(ggplot2)
library(reshape2)
library(shiny)
library(XML)
library(markdown)
library(RNeo4j)
library(mailR)
require(shinysky)
suppressPackageStartupMessages(library(googleVis))
setwd('/Users/Chris/Documents/Personal/Old Computer/Chris Documents/Derby')
getwd()
qb_int_url = 'http://www.sportingcharts.com/nfl/stats/quarterback-interception-rates/2014/'
qb_int_list = readHTMLTable(qb_int_url,stringsAsFactors=F)
team_int_url = 'http://www.sportingcharts.com/nfl/stats/team-interception-rate/2014/'
team_int_list = readHTMLTable(team_int_url,stringsAsFactors=F)
qb_url = 'http://espn.go.com/nfl/players/_/position/qb'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
qb_list
qb_url = 'https://sports.yahoo.com/nfl/players?type=position&c=NFL&pos=QB'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
qb_list
qb_url = 'https://sports.yahoo.com/nfl/players?type=position&c=NFL&pos=QB'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
test = htmlParse(qb_url)
qb_url = 'http://www.cbssports.com/nfl/playersearch?POSITION=QB'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
qb_list
qb_list[[1]]
qb_list[[2]]
qb_list[[3]]
qb_list[[4]]
names(qb_list)
head(qb_list)
class(qb_list)
class(qb_list[[1]])
class(qb_list[[2]])
class(qb_list[[3]])
head(qb_list[[1]])
nrow(qb_list[[1]])
nrow(qb_list[[2]])
qb_list[[2]]
qb_url = 'http://www.nfl.com/players/search?category=position&filter=quarterback&conferenceAbbr=null&playerType=current&conference=ALL'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
head(qb_list[[1]])
head(qb_list[[2]])
head(qb_list[[3]])
dim(qb_list)
nrow(qb_list[[1]])
nrow(qb_list[[2]])
library(RCurl)
library(ggplot2)
library(reshape2)
library(shiny)
library(XML)
library(markdown)
library(RNeo4j)
library(mailR)
require(shinysky)
suppressPackageStartupMessages(library(googleVis))
qb_int_url = 'http://www.sportingcharts.com/nfl/stats/quarterback-interception-rates/2014/'
qb_int_list = readHTMLTable(qb_int_url,stringsAsFactors=F)
team_int_url = 'http://www.sportingcharts.com/nfl/stats/team-interception-rate/2014/'
team_int_list = readHTMLTable(team_int_url,stringsAsFactors=F)
# qb_url = 'http://espn.go.com/nfl/players/_/position/qb'
# qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
# qbframe = qb_list[[1]]
# qbframe = qbframe[,c(1:2)]
# names(qbframe) = c('Name','Team')
# qbframe = qbframe[grep(',',qbframe$Name),]
qb_url = 'http://sports.yahoo.com/nfl/players?type=position&c=NFL&pos=QB'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
qbs = qb_list[[9]]
qbs = qbs[-1,]
firstlast = colsplit(qbs[,1]," ",c("first","last"))
qbframe = data.frame(Name = paste0(firstlast$last,', ',firstlast$first),Team = qbs[,3])
sched = read.csv('nfl2014sched.csv',stringsAsFactors=F)
sched$DATE = as.Date(sched$DATE,format='%m/%d/%y')
weeklyDate = aggregate(sched$DATE,list(week=sched$WEEK),max)
currentWeek = min(which(weeklyDate$x>=Sys.Date()))
myCsv = getURL('https://docs.google.com/spreadsheet/pub?key=0Akv8ehIfGJVKdGx3NXdib0p6Q01CSEZ4amY0RW53Ymc&single=true&gid=2&output=csv',
ssl.verifypeer=F,useragent='R')
info = read.csv(textConnection(myCsv),stringsAsFactors=F)
info = info[!is.na(info$week),]
info
derby = info
derby = derby[derby$name!='',c(1:7)]
names(derby) = c('Week','Person','pickorder','qb1','int.qb1','qb2','int.qb2')
derby$weeklytotal = as.numeric(derby$int.qb1)+as.numeric(derby$int.qb2)
person.total = aggregate(derby$weeklytotal,by=list(Person=derby$Person),sum,na.rm=T)
names(person.total) = c('Person','TotalINT')
person.total=person.total[order(person.total$TotalINT,decreasing=T),]
qb1 = derby[,c('Week','Person','qb1','int.qb1','pickorder')]
qb2 = derby[,c('Week','Person','qb2','int.qb2','pickorder')]
names(qb1) = names(qb2) = c('Week','Person','qb','int','pickorder')
qb = rbind(qb1,qb2)
qb = qb[!(is.na(qb$int)),]
qb.total = aggregate(qb$int,by=list(QB=qb$qb),sum)
names(qb.total) = c('QB','Int')
qb.playertotal = aggregate(qb$int,by=list(qb$qb,qb$Person),sum)
names(qb.playertotal)=c('QB','Person','Int')
PlayerQBPlot = dcast(qb.playertotal,QB~Person)
barchart = gvisColumnChart(PlayerQBPlot,options=list(isStacked=T,hAxis='{slantedText:true,slantedTextAngle:90}',width=1500,height=750))
cumulatives = c()
peeps = unique(derby$Person)
for (i in 1:4) {
weekly.person = derby[derby$Person==peeps[i],]
weekly.person$cumulative = cumsum(weekly.person$weeklytotal)
cumulatives = rbind(cumulatives,weekly.person)
}
weekly = dcast(cumulatives[,c('Week','Person','cumulative')],Week~Person)
weeklytotals = gvisLineChart(weekly,options=list(width=1500,height=750))
weeklytotals
gvisLineChart(weekly,options=list(width=1500,height=750))
shiny::runApp()
info[info$week==currentWeek&info$name=='CT','pickOrder']
currentWeek
weeklyDate$x>=Sys.Date()
currentYear = 2015
qb_int_url = paste0('http://www.sportingcharts.com/nfl/stats/quarterback-interception-rates/',currentYear,'/')
qb_int_list = readHTMLTable(qb_int_url,stringsAsFactors=F)
team_int_url = paste0('http://www.sportingcharts.com/nfl/stats/team-interception-rate/',currentYear,'/')
team_int_list = readHTMLTable(team_int_url,stringsAsFactors=F)
library(RCurl)
library(ggplot2)
library(reshape2)
library(shiny)
library(XML)
library(markdown)
library(RNeo4j)
library(mailR)
require(shinysky)
suppressPackageStartupMessages(library(googleVis))
# setwd('/Users/Chris/Documents/Personal/Old Computer/Chris Documents/Derby')
# setwd('~/InterceptionDerby')
currentYear = 2015
qb_int_url = paste0('http://www.sportingcharts.com/nfl/stats/quarterback-interception-rates/',currentYear,'/')
qb_int_list = readHTMLTable(qb_int_url,stringsAsFactors=F)
team_int_url = paste0('http://www.sportingcharts.com/nfl/stats/team-interception-rate/',currentYear,'/')
team_int_list = readHTMLTable(team_int_url,stringsAsFactors=F)
qb_url = 'http://sports.yahoo.com/nfl/players?type=position&c=NFL&pos=QB'
qb_list = readHTMLTable(qb_url,stringsAsFactors=F)
qbs = qb_list[[9]]
qbs = qbs[-1,]
firstlast = colsplit(qbs[,1]," ",c("first","last"))
firstlast
firstlast$first = substr(firstlast$first,2,100)
firstlast
firstlast = colsplit(qbs[,1]," ",c("first","last"))
firstlast$first = substr(firstlast$first,3,100)
firstlast
qbframe = data.frame(Name = paste0(firstlast$last,', ',firstlast$first),Team = qbs[,3])
qbframe
emailbody = "This is a test"
currentWeek
currentWeek = 2
send.mail(from = 'intderby@gmail.com',
to = derbylist,
subject = paste0('Week ',currentWeek,' INT Derby Selections'),
body = emailBody,
html = T,
smtp = list(host.name = 'smtp.gmail.com',port=465,user.name='intderby',passwd='interceptions',ssl=T),
authenticate = T,
send = T
)
derbylist = c('cdthoms@gmail.com')
send.mail(from = 'intderby@gmail.com',
to = derbylist,
subject = paste0('Week ',currentWeek,' INT Derby Selections'),
body = emailBody,
html = T,
smtp = list(host.name = 'smtp.gmail.com',port=465,user.name='intderby',passwd='interceptions',ssl=T),
authenticate = T,
send = T
)
emailBody = 'This is a test'
send.mail(from = 'intderby@gmail.com',
to = derbylist,
subject = paste0('Week ',currentWeek,' INT Derby Selections'),
body = emailBody,
html = T,
smtp = list(host.name = 'smtp.gmail.com',port=465,user.name='intderby',passwd='interceptions',ssl=T),
authenticate = T,
send = T
)
send.mail(from = 'intderby@gmail.com',
to = derbylist,
subject = paste0('Week ',currentWeek,' INT Derby Selections'),
body = emailBody,
html = T,
smtp = list(host.name = 'smtp.gmail.com',port=465,user.name='intderby',passwd='interceptions',ssl=T),
authenticate = T,
send = T
)
